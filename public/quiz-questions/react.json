{
    "quiz": {
      "title": "React Quiz",
      "questions": [
        {
          "id": 1,
          "question": "What is React?",
          "options": [
            "A JavaScript library for building user interfaces",
            "A JavaScript framework for building web apps",
            "A CSS framework for styling websites",
            "A Python library for web development"
          ],
          "correctAnswer": "A JavaScript library for building user interfaces"
        },
        {
          "id": 2,
          "question": "What is JSX in React?",
          "options": [
            "JavaScript and HTML combined",
            "JavaScript Object Syntax Extension",
            "JavaScript XML Syntax Extension",
            "JavaScript Style eXtension"
          ],
          "correctAnswer": "JavaScript XML Syntax Extension"
        },
        {
          "id": 3,
          "question": "Which function is used to create a React component?",
          "options": [
            "createElement()",
            "component()",
            "createComponent()",
            "React.createElement()"
          ],
          "correctAnswer": "React.createElement()"
        },
        {
          "id": 4,
          "question": "What is the purpose of `ReactDOM.render()`?",
          "options": [
            "It renders a React component to the screen",
            "It updates the DOM",
            "It sets up routing for a React application",
            "It fetches data from a server"
          ],
          "correctAnswer": "It renders a React component to the screen"
        },
        {
          "id": 5,
          "question": "What is a state in React?",
          "options": [
            "A way to pass data between components",
            "A way to store information about the component's current situation",
            "A function that renders a component",
            "A type of React lifecycle method"
          ],
          "correctAnswer": "A way to store information about the component's current situation"
        },
        {
          "id": 6,
          "question": "How do you define a component in React?",
          "options": [
            "Using a function or class",
            "Using a module",
            "Using an HTML element",
            "Using a global variable"
          ],
          "correctAnswer": "Using a function or class"
        },
        {
          "id": 7,
          "question": "What is the purpose of the `useState` hook?",
          "options": [
            "To handle side effects in React components",
            "To manage component state in functional components",
            "To create class components",
            "To render a component to the DOM"
          ],
          "correctAnswer": "To manage component state in functional components"
        },
        {
          "id": 8,
          "question": "What is the virtual DOM?",
          "options": [
            "A lightweight in-memory representation of the real DOM",
            "The actual DOM that the browser uses",
            "A browser-specific rendering engine",
            "A server-side representation of the DOM"
          ],
          "correctAnswer": "A lightweight in-memory representation of the real DOM"
        },
        {
          "id": 9,
          "question": "What does `useEffect` hook do in React?",
          "options": [
            "It handles component lifecycle methods in functional components",
            "It renders a component",
            "It updates the state",
            "It defines the style for a component"
          ],
          "correctAnswer": "It handles component lifecycle methods in functional components"
        },
        {
          "id": 10,
          "question": "Which method is used to update the state of a component in React?",
          "options": [
            "this.updateState()",
            "this.setState()",
            "this.changeState()",
            "this.modifyState()"
          ],
          "correctAnswer": "this.setState()"
        },
        {
          "id": 11,
          "question": "What is a React prop?",
          "options": [
            "A way to pass data from a parent component to a child component",
            "A state variable",
            "A method for updating state",
            "A global variable in React"
          ],
          "correctAnswer": "A way to pass data from a parent component to a child component"
        },
        {
          "id": 12,
          "question": "Which of the following is used to create a React class component?",
          "options": [
            "class MyComponent extends React.Component",
            "React.createClass(MyComponent)",
            "function MyComponent() {}",
            "React.component(MyComponent)"
          ],
          "correctAnswer": "class MyComponent extends React.Component"
        },
        {
          "id": 13,
          "question": "What does `componentDidMount` lifecycle method do?",
          "options": [
            "It runs after the component renders for the first time",
            "It runs before the component renders",
            "It updates the state of the component",
            "It renders the component"
          ],
          "correctAnswer": "It runs after the component renders for the first time"
        },
        {
          "id": 14,
          "question": "What is a higher-order component (HOC) in React?",
          "options": [
            "A function that takes a component and returns a new component",
            "A type of React prop",
            "A special lifecycle method",
            "A custom hook"
          ],
          "correctAnswer": "A function that takes a component and returns a new component"
        },
        {
          "id": 15,
          "question": "How do you handle events in React?",
          "options": [
            "By using event handlers like `onClick`, `onSubmit`, etc.",
            "By adding event listeners directly in the HTML",
            "By using `setState()`",
            "By using JavaScript's `addEventListener()` method"
          ],
          "correctAnswer": "By using event handlers like `onClick`, `onSubmit`, etc."
        },
        {
          "id": 16,
          "question": "Which of the following is used to pass data between components in React?",
          "options": [
            "Props",
            "State",
            "Ref",
            "Context"
          ],
          "correctAnswer": "Props"
        },
        {
          "id": 17,
          "question": "How can you prevent a component from re-rendering in React?",
          "options": [
            "Using `shouldComponentUpdate`",
            "Using `componentWillUpdate`",
            "Using `React.memo`",
            "All of the above"
          ],
          "correctAnswer": "All of the above"
        },
        {
          "id": 18,
          "question": "What is `React.memo()` used for?",
          "options": [
            "To optimize performance by memoizing a component",
            "To create a new React component",
            "To prevent state from changing",
            "To wrap a component in a higher-order component"
          ],
          "correctAnswer": "To optimize performance by memoizing a component"
        },
        {
          "id": 19,
          "question": "Which hook is used to manage context in React?",
          "options": [
            "useContext",
            "useState",
            "useEffect",
            "useReducer"
          ],
          "correctAnswer": "useContext"
        },
        {
          "id": 20,
          "question": "Which of the following is the correct syntax for defining a functional component in React?",
          "options": [
            "const MyComponent = () => {}",
            "class MyComponent extends React.Component {}",
            "function MyComponent() {}",
            "Both A and C"
          ],
          "correctAnswer": "Both A and C"
        },
        {
          "id": 21,
          "question": "What is `useRef` hook used for in React?",
          "options": [
            "To persist values across renders without causing re-renders",
            "To manage state in functional components",
            "To access DOM elements directly",
            "Both A and C"
          ],
          "correctAnswer": "Both A and C"
        },
        {
          "id": 22,
          "question": "What is `React.StrictMode` used for?",
          "options": [
            "To help identify potential problems in an application during development",
            "To optimize performance",
            "To prevent certain lifecycle methods from being used",
            "To create a production build"
          ],
          "correctAnswer": "To help identify potential problems in an application during development"
        },
        {
          "id": 23,
          "question": "Which of the following methods is used to update state in a React component?",
          "options": [
            "this.setState()",
            "this.updateState()",
            "this.changeState()",
            "this.modifyState()"
          ],
          "correctAnswer": "this.setState()"
        },
        {
          "id": 24,
          "question": "How can you conditionally render content in React?",
          "options": [
            "Using ternary operators",
            "Using `if` statements",
            "Using logical operators",
            "All of the above"
          ],
          "correctAnswer": "All of the above"
        },
        {
          "id": 25,
          "question": "What is the main benefit of using Redux with React?",
          "options": [
            "Centralized state management",
            "Faster component rendering",
            "Simplifies the component structure",
            "Improves UI responsiveness"
          ],
          "correctAnswer": "Centralized state management"
        },
        {
          "id": 26,
          "question": "Which of the following is used to send data from a React component to Redux?",
          "options": [
            "dispatch()",
            "store()",
            "state()",
            "setState()"
          ],
          "correctAnswer": "dispatch()"
        },
        {
          "id": 27,
          "question": "What is the main purpose of the `key` prop in React lists?",
          "options": [
            "To identify which items have changed, are added, or are removed",
            "To bind a list item to a specific event handler",
            "To define the value of an item in the list",
            "To style the list items"
          ],
          "correctAnswer": "To identify which items have changed, are added, or are removed"
        },
        {
          "id": 28,
          "question": "What is the correct syntax to import React in a JavaScript file?",
          "options": [
            "import React from 'react';",
            "import { React } from 'react';",
            "require('react');",
            "import 'react';"
          ],
          "correctAnswer": "import React from 'react';"
        },
        {
          "id": 29,
          "question": "How can you trigger a re-render of a component in React?",
          "options": [
            "By calling `setState()`",
            "By updating the component's state",
            "By changing the props",
            "All of the above"
          ],
          "correctAnswer": "All of the above"
        },
        {
          "id": 30,
          "question": "What does the `useReducer` hook do in React?",
          "options": [
            "It manages the state of the component",
            "It is used for complex state logic in functional components",
            "It is similar to `useState` but allows for more control over state updates",
            "All of the above"
          ],
          "correctAnswer": "All of the above"
        }
      ]
    }
  }
  